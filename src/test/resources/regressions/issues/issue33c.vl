region Cell(id r, int lvl, memcell x)
  guards { unique G; }
  interpretation { x.f |-> ?v }
  state { v }
  actions { G: ?n ~> ?m; }

abstract_atomic procedure test01(id r, int lvl, memcell x)
  interference ?v in Set(0) on r;
  requires Cell(r, lvl, x, v) && G@r;
  ensures  Cell(r, lvl, x, 1) && G@r;
{
  make_atomic
    using Cell(r, lvl, x) with G@r;
  {
    assert Cell(r, lvl, x, 0); // Duplicate the
    inhale Cell(r, lvl, x);    // region assertion

    update_region
      using Cell(r, lvl, x);
    {
      x.f := 1;
    }

    //:: ExpectedOutput(assert_error:assertion_error)
    assert false;
  }
}

struct memcell {
  int f;
}
