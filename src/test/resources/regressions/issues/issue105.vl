struct memcell {
  int f;
}

region Counter(id c, int lvl, memcell x)
  guards { unique G; }
  interpretation { x.f |-> ?n }
  state { n }
  actions { G: ?n ~> ?m; }

abstract_atomic procedure wkincr(id c, int lvl, memcell x)
  interference ?n in Set<int>(n);
  requires Counter(c, lvl, x, n) && G@c;
{
  int r;

  make_atomic using Counter(c, lvl, x) with G@c {
    // inhale G@c; // Does not help (and should not be done anyway)
    assert Counter(c, lvl, x, ?m0) && m0 == n;
    skip; skip;
    //:: UnexpectedOutput(assert_error:assertion_error, /voila/issue/105/)
    assert Counter(c, lvl, x, ?m1) && m1 == n;
  }
}
