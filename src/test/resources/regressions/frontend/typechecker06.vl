procedure test01() {
  frac f;

  f := 1/2;
}

procedure test02(frac f)
  requires f == 1f;
  ensures 1/2 < f;
  ensures f <= 2*1f;
{}

procedure test03(int f)
  requires f == 1;
  //:: ExpectedOutput(typechecker_error)
  ensures 1/2 < f;
{}

procedure test04(int i)
  requires i != 0;
{
  frac f;

  f := i/i;
  f := f/i;
  //:: ExpectedOutput(typechecker_error)
  f := i/f;
}

procedure test05() {
  test02(1f);
}

procedure test06() {
  test04(10);
}

procedure test07(frac f) {
  frac f1;

  f1 := 2 * f;
  f1 := f * f1;
  //:: ExpectedOutput(typechecker_error)
  f1 := f1 * 2;
}

procedure test08(frac f, int n) {
  frac f1;

  f1 := f - f/2;
  f1 := n*f1 + f;
  //:: ExpectedOutput(typechecker_error)
  f1 := n + f;
}