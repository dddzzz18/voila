region R(id s)
  guards { unique RG; }
  interpretation { true }
  state { true }
  actions {}

void test01() {
  set<bool> bs;

  bs := Set[bool](?c | c);
}

void test02() {
  set<bool> bs;

  // bs := Set(?c | c); // TODO: Requires better type inference
}

void test03(id s)
  requires R(s, ?b);
{
  set<bool> bs;

  bs := Set[bool](?c | c == b);
}

void test04(id s)
  requires R(s, ?b);
{
  set<bool> bs;

  bs := Set(?c | c == b);
}



region RR(id s)
  guards { unique RRG; }
  interpretation { true }
  state { 0 }
  actions {}

void callee01(set<int> xs)

void test05(id s)
  requires RR(s, ?v);
{
  callee01(Set[int](?w | w <= v));
}

void test06(id s)
  requires RR(s, ?v);
{
  callee01(Set(?w | w <= v));
}
